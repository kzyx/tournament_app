// This file was partly generated by quicktype.io (gets classes from JSON)
// I wrote a lot of the code though. Essentially, the JSON object retrieved
// from the GET request is turned into a Playoffs object. The PlayoffNode
// represents a node in the graph/tree generated from the Playoffs object.

import 'dart:convert';
import 'package:graphview/GraphView.dart';
import 'package:tournament_app/models/misc.dart';

class Series {
  Series({
    required this.seriesNumber,
    required this.seriesCode,
    required this.names,
    required this.currentGame,
    required this.conference,
    required this.round,
    required this.matchupTeams,
  });

  final int seriesNumber;
  final String seriesCode;
  final SeriesNames names;
  final CurrentGame currentGame;
  final LinkedObject conference;
  final int round;
  final List<MatchupTeam> matchupTeams;

  factory Series.fromRawJson(String str) => Series.fromJson(json.decode(str));

  String toRawJson() => json.encode(toJson());

  factory Series.fromJson(Map<String, dynamic> json) => Series(
        seriesNumber: json["seriesNumber"],
        seriesCode: json["seriesCode"],
        names: SeriesNames.fromJson(json["names"]),
        currentGame: CurrentGame.fromJson(json["currentGame"]),
        conference: LinkedObject.fromJson(json["conference"]),
        round: json["round"]["number"],
        matchupTeams: List<MatchupTeam>.from(
            json["matchupTeams"].map((x) => MatchupTeam.fromJson(x))),
      );

  Map<String, dynamic> toJson() => {
        "seriesNumber": seriesNumber,
        "seriesCode": seriesCode,
        "names": names.toJson(),
        "currentGame": currentGame.toJson(),
        "conference": conference.toJson(),
        "round": round,
        "matchupTeams": List<dynamic>.from(matchupTeams.map((x) => x.toJson())),
      };
}

class SeriesRecord {
  SeriesRecord({
    required this.wins,
    required this.losses,
  });

  final int wins;
  final int losses;

  factory SeriesRecord.fromRawJson(String str) =>
      SeriesRecord.fromJson(json.decode(str));

  String toRawJson() => json.encode(toJson());

  factory SeriesRecord.fromJson(Map<String, dynamic> json) => SeriesRecord(
        wins: json["wins"],
        losses: json["losses"],
      );

  Map<String, dynamic> toJson() => {
        "wins": wins,
        "losses": losses,
      };
}

class SeriesNames {
  SeriesNames({
    required this.matchupName,
    required this.matchupShortName,
    required this.teamAbbreviationA,
    required this.teamAbbreviationB,
    required this.seriesSlug,
  });

  final String matchupName;
  final String matchupShortName;
  final String teamAbbreviationA;
  final String teamAbbreviationB;
  final String seriesSlug;

  factory SeriesNames.fromRawJson(String str) =>
      SeriesNames.fromJson(json.decode(str));

  String toRawJson() => json.encode(toJson());

  factory SeriesNames.fromJson(Map<String, dynamic> json) => SeriesNames(
        matchupName: json["matchupName"],
        matchupShortName: json["matchupShortName"],
        teamAbbreviationA: json["teamAbbreviationA"],
        teamAbbreviationB: json["teamAbbreviationB"],
        seriesSlug: json["seriesSlug"],
      );

  Map<String, dynamic> toJson() => {
        "matchupName": matchupName,
        "matchupShortName": matchupShortName,
        "teamAbbreviationA": teamAbbreviationA,
        "teamAbbreviationB": teamAbbreviationB,
        "seriesSlug": seriesSlug,
      };
}

class SeriesSummary {
  SeriesSummary({
    required this.gamePk,
    required this.gameNumber,
    required this.gameLabel,
    required this.necessary,
    required this.gameCode,
    required this.gameTime,
    required this.seriesStatus,
    required this.seriesStatusShort,
  });

  final int gamePk;
  final int gameNumber;
  final String gameLabel;
  final bool necessary;
  final int gameCode;
  final DateTime gameTime;
  final String seriesStatus;
  final String seriesStatusShort;

  factory SeriesSummary.fromRawJson(String str) =>
      SeriesSummary.fromJson(json.decode(str));

  String toRawJson() => json.encode(toJson());

  factory SeriesSummary.fromJson(Map<String, dynamic> json) => SeriesSummary(
        gamePk: json["gamePk"],
        gameNumber: json["gameNumber"],
        gameLabel: json["gameLabel"],
        necessary: json["necessary"],
        gameCode: json["gameCode"],
        gameTime: DateTime.parse(json["gameTime"]),
        seriesStatus: json["seriesStatus"],
        seriesStatusShort: json["seriesStatusShort"],
      );

  Map<String, dynamic> toJson() => {
        "gamePk": gamePk,
        "gameNumber": gameNumber,
        "gameLabel": gameLabel,
        "necessary": necessary,
        "gameCode": gameCode,
        "gameTime": gameTime.toIso8601String(),
        "seriesStatus": seriesStatus,
        "seriesStatusShort": seriesStatusShort,
      };
}
