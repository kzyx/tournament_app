type SeriesRecord {
  wins: Int
  losses: Int
}

type Seed {
  type: String
  rank: Int
  isTop: Boolean
}

type Team {
  id: Int
  name: String
  link: String
}

type MatchupTeams {
  seriesRecord: SeriesRecord
  seed: Seed
  team: Team
}

type Round {
  number: Int
}

type Conference {
  id: Int
  name: String
  link: String
}

type SeriesSummary {
  gamePk: Int
  gameNumber: Int
  gameLabel: String
  necessary: Boolean
  gameCode: Int
  gameTime: String
  seriesStatus: String
  seriesStatusShort: String
}

type CurrentGame {
  seriesSummary: SeriesSummary
}

type Names {
  matchupName: String
  matchupShortName: String
  teamAbbreviationA: String
  teamAbbreviationB: String
  seriesSlug: String
}

type Series {
  seriesNumber: Int
  seriesCode: String
  matchupTeams: [MatchupTeams]
  round: Round
  conference: Conference
  currentGame: CurrentGame
  names: Names
}

type Format {
  name: String
  description: String
  numberOfGames: Int
  numberOfWins: Int
}

type Rounds {
  number: Int
  code: Int
  series: [Series]
  format: Format
  names: Names
}

type AutogeneratedMainType {
  copyright: String
  id: Int
  name: String
  season: String
  defaultRound: Int
  rounds: [Rounds]
}

# Types with identical fields:
# Team Conference




